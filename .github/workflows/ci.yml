name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [14.x, 16.x, 18.x, 20.x]
        exclude:
          # Node.js 14.x is not available for macOS arm64
          - os: macos-latest
            node-version: 14.x
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Install dependencies
      run: npm install
    
    - name: Run framework tests
      run: npm test
    
    - name: Test CLI
      run: |
        npm link
        npx cext-test --help
    
    - name: Test on sample extension
      run: |
        mkdir -p test-extension
        echo '{"manifest_version": 3, "name": "Test", "version": "1.0.0"}' > test-extension/manifest.json
        node bin/cli.js test-extension -o json
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node-version }}
        path: test-results/
        if-no-files-found: ignore

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
    
    - name: Fix permissions
      run: chmod +x bin/cli.js
    
    - name: Check file permissions
      run: |
        test -x bin/cli.js || (echo "cli.js must be executable" && exit 1)
    
    - name: Validate package.json
      run: |
        node -e "JSON.parse(require('fs').readFileSync('package.json'))"
    
    - name: Check for console.log in production code
      run: |
        ! grep -r "console\.log" lib/ --include="*.js" || echo "Warning: console.log found in lib/"

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: [test, lint]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: npm install
    
    - name: Dry run publish
      run: npm publish --dry-run